name: PyInstaller Windows Build

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-windows:
    # We are focusing only on the Windows runner for now
    runs-on: windows-latest
    timeout-minutes: 25 # Generous timeout for multiple install steps

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # This is the targeted, multi-phase installation to avoid resource limits.
      - name: Install dependencies strategically
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

          echo "--- Phase 1: Install the heaviest, most common packages ---"
          pip install numpy
          pip install scipy
          pip install pandas
          pip install matplotlib
          pip install onnxruntime

          echo "--- Phase 2: Install MNE's smaller, pure-python dependencies ---"
          # By installing these first, we break up the single large 'mne' install.
          pip install pooch decorator jinja2 lazy-loader tqdm

          echo "--- Phase 3: Install MNE (now that its dependencies are met) ---"
          # This command should now be very fast and use minimal memory.
          pip install mne

          echo "--- Phase 4: Install all remaining packages from requirements.txt ---"
          # This catches any other dependencies and ensures everything is consistent.
          # Pip will skip all the packages we've already installed.
          pip install -r requirements.txt
        shell: bash

      - name: Build Executable with PyInstaller
        run: pyinstaller NIDRA.spec

      - name: Basic Executable Test (Smoke Test)
        run: |
          echo "Running smoke test on the built application..."
          # The path for a PyInstaller one-dir build on Windows
          ./dist/NIDRA/NIDRA.exe --version
        shell: bash

      - name: Upload Windows Executable
        uses: actions/upload-artifact@v4
        with:
          name: NIDRA-app-Windows
          path: dist/
