name: NIDRA Build

# This workflow runs only on the 'master' branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_and_publish_sdist:
    name: Build and publish sdist
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Trusted publishing
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: python -m pip install --upgrade pip build toml

      - name: Create script to update version
        run: |
          cat << 'EOF' > update_version.py
          import toml
          import os
          import sys
          pyproject_path = 'pyproject.toml'
          github_run_number = os.environ.get('GITHUB_RUN_NUMBER')
          github_ref = os.environ.get('GITHUB_REF')
          with open(pyproject_path, 'r') as f:
              data = toml.load(f)
          if github_ref == 'refs/heads/master' and github_run_number:
              base_version = str(data['project']['version'])
              if '.dev' in base_version:
                  base_version = base_version.split('.dev')[0]
              new_version = f"{base_version}.dev{github_run_number}"
              data['project']['version'] = new_version
              print(f"Set version to {new_version}", file=sys.stderr)
              with open(pyproject_path, 'w') as f:
                  toml.dump(data, f)
              print("Updated pyproject.toml with dev version", file=sys.stderr)
          EOF
        shell: bash

      - name: Update version in pyproject.toml
        run: python update_version.py
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          GITHUB_REF: ${{ github.ref }}

      - name: Build sdist
        run: python -m build --sdist

      - name: Publish distribution to TestPyPI
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/